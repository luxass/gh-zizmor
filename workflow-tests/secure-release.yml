name: Secure Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string

permissions:
  contents: write
  id-token: write  # For OIDC token generation

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      version: ${{ steps.version.outputs.version }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false
          
      - name: Validate version format
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          
          # Validate semantic version format
          if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build:
    needs: validate
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          persist-credentials: false
          
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build release
        run: npm run build
        
      - name: Create release archive
        run: |
          tar -czf release-${{ needs.validate.outputs.version }}.tar.gz dist/
          
      - name: Generate checksums
        run: |
          sha256sum release-${{ needs.validate.outputs.version }}.tar.gz > checksums.txt
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: release-artifacts
          path: |
            release-*.tar.gz
            checksums.txt
          retention-days: 1
          
  publish:
    needs: [validate, build]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: production  # Requires manual approval
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8
        with:
          name: release-artifacts
          
      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191  # v2.0.8
        with:
          files: |
            release-*.tar.gz
            checksums.txt